class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}
public class MergeSortedLinkedLists {
    public static Node mergeSortedLists(Node head1, Node head2) {
        Node temp = new Node(0);
        Node tail = temp;

        while (head1 != null && head2 != null ){
            if (head1.data <= head2.data){
                tail.next = head1;
                head1 = head1.next;
            } else {
                tail.next = head2;
                head2 = head2.next;
            }
            tail = tail.next;
        }
        if(head1 != null) tail.next = head1;
        if(head2 != null) tail.next = head2;

        return temp.next;
    }
    public static void printList(Node head) {
        while(head != null){
            System.out.print(head.data + " -> ");
            head = head.next;
        }
        System.out.println("null");
    }
    public static Node createList(int[] arr) {
        if(arr.length == 0) return null;
        Node head = new Node(arr[0]);
        Node cur = head;
        for (int i = 1; i<arr.length; i++) {
            cur.next = new Node(arr[i]);
            cur = cur.next;
        }
        return head;
    }
    public static void main(String[] args){
        int[] list1 = {1, 3, 3, 5, 7};
        int[] list2 = {2, 4, 6, 8};
        Node head1 = createList(list1);
        Node head2 = createList(list2);

        System.out.println("List 1: ");
        printList(head1);

        System.out.println("List 2: ");
        printList(head2);

        Node mergedHead = mergeSortedLists(head1, head2);
        printList(mergedHead);
    }
}
